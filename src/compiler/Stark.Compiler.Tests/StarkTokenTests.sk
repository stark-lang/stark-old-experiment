// This is a single line comment

/// This is a comment doc

/* This is a multi line comment */

/* This is a 
multi line 
comment */

/* This is a 
/*multi line*/
comment */

// Identifiers
_id
_identifier
_012345678
abc
abc12345
abc_1_2_3
_a
_0
a
αβΒΩ // unicode characters

// Integers
0
1
123
0123
0_1_2_3
0_1_2_3_4_
1_2_3_4

// Integers hexa
0x_1234_1234
0X_1234_1234
0x12
0x1
0x12_

// Integers binary
0b_1010_0001
0B_1111_1100
0b01
0b10
0b001_

// Integers octal
0o_123_777
0O_777_123
0o123
0o1
0o12_

1.0
1234.123
12.0e2
1e1
1e100
1.0e+1
1.0e+10
1.0e-124
1_2_3.1_2_4
1_2.1_2e1_3

1..2 // test with ranges
1...3
1..e2


     // spaces

// chars
'a'
'b'
'\0'
'\\'
'\"'
'\''
'\a'
'\b'
'\f'
'\n'
'\r'
'\t'
'\v'

'\x1'
'\x10'
'\xFF'
'\x100'
'\x10AB'
'\xFFFF'

'\u00AB'
'\u1200'
'\U00AB1234'
'\U1200ABCD'

// strings
"This is a string with \n \u0000 \u1234"

@"This is a multiline raw string ""
With another line
"

// Operators
~
;
^
:
::
+=
-=
%=
*=
/=
<<=
>>=
|=
&=
^=
||=
&&=
=
==
=>
>=
|
||
!
!=
&
&&
?
??
<
<<
<=
>
>>
/
\\
*
+
++
-
--
->
%
,
.
..
...
..<
(
)
{
}
[
]

// Check keywords

ABSTRACT: abstract;
ALIAS: alias; alias1 alias2
AS: as;
ASYNC: async;
AWAIT: await;
BASE: base;
BREAK: break;
CONST: const;
CONSTRUCTOR: constructor;
DEFAULT: default;
ELSE: else;
EXTENDS: extends;
EXTERN: extern;
FALSE: false;
FATAL: fatal;
FIXED: fixed;
FOR: for; foreach
FROM: from;
FUNC: func;
GET: get;
IF: if; if_ if1
IMMUTABLE: immutable;
IMPLEMENTS: implements;
IMPORT: import;
IN: in;
INTERNAL: internal;
IS: is;
ISOLATED: isolated;
LET: let;
MATCH: match;
META: meta;
MODULE: module;
MUTABLE: mutable;
NEW: new;
OPERATOR: operator;
OUT: out;
OVERRIDE: override;
PACKAGE: package;
PARAMS: params;
PARTIAL: partial;
PRIVATE: private;
PROTECTED: protected;
PUBLIC: public;
READONLY: readonly;
REF: ref;
REQUIRES: requires;
RETURN: return;
SCOPED: scoped;
SEALED: sealed;
SET: set;
SIZEOF: sizeof;
STATIC: static;
THIS: this;
THROW: throw;
TRANSIENT: transient;
TRUE: true;
TYPEOF: typeof;
UNSAFE: unsafe;
VALUE: value;
VIRTUAL: virtual;
VOLATILE: volatile;
WHERE: where;
WHILE: while;
WITH: with;

